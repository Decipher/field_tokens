<?php

/**
 * @file
 * Tests for the Field tokens module.
 */

/**
 * Class FieldTokensTestCase
 */
class FieldTokensTestCase extends ImageFieldTestCase {
  function setUp() {
    DrupalWebTestCase::setUp('field_tokens', 'image');
    $this->admin_user = $this->drupalCreateUser(array(
      'access content',
      'access administration pages',
      'administer site configuration',
      'administer content types',
      'administer nodes',
      'create article content',
      'edit any article content',
      'delete any article content',
      'administer image styles'
    ));
    $this->drupalLogin($this->admin_user);
  }
}

/**
 * Class FieldTokensFormattedTestCase
 */
class FieldTokensFormattedTestCase extends FieldTokensTestCase {
  public static function getInfo() {
    return array(
      'name'        => 'Formatted field tokens test',
      'description' => 'Tests the Formatted field tokens.',
      'group'       => 'Field tokens',
    );
  }

  function testFormattedTokens() {
    $field_name = strtolower($this->randomName());
    $this->createImageField($field_name, 'article');
    // Create a new node with an image attached.
    $test_image = current($this->drupalGetTestFiles('image'));
    $nid        = $this->uploadNodeImage($test_image, $field_name, 'article');
    $node       = node_load($nid, NULL, TRUE);
    $display    = array(
      'type'     => 'image',
      'settings' => array(
        'image_style' => '',
        'image_link'  => '',
      ),
      'module'   => 'image',
    );
    $element    = field_view_field('node', $node, $field_name, $display);
    $output     = render($element['0']);

    // Image field with Image formatter.
    $token = "[node:{$field_name}-formatted:0:image]";
    $value = token_replace($token, array('node' => $node));
    // Check token has been processed.
    $this->assertEqual($value, $output, $token . ' matches rendered Image formatter for provided Image field.');
  }
}

/**
 * Class FieldTokensPropertyTestCase
 */
class FieldTokensPropertyTestCase extends FieldTokensTestCase {
  public static function getInfo() {
    return array(
      'name'        => 'Field property tokens test',
      'description' => 'Tests the Field property tokens.',
      'group'       => 'Field tokens',
    );
  }

  function testPropertyTokens() {
    $field_name = strtolower($this->randomName());
    $this->createImageField($field_name, 'article');
    // Create a new node with an image attached.
    $test_image = current($this->drupalGetTestFiles('image'));
    $nid        = $this->uploadNodeImage($test_image, $field_name, 'article');
    $node       = node_load($nid, NULL, TRUE);
    $items      = field_get_items('node', $node, $field_name);

    // Image field URI property token.
    $token = "[node:{$field_name}-property:0:uri]";
    $value = token_replace($token, array('node' => $node));
    $this->assertEqual($value, $items[0]['uri'], $token . ' matches provided Image field URI property.');
  }
}
